# Generated by Django 4.0.2 on 2022-03-24 10:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
                'db_table': 'area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=200, verbose_name='Наименование')),
                ('development', models.CharField(blank=True, choices=[('Не освоен', 'Не освоен'), ('Слабо освоен', 'Слабо освоен'), ('Освоен', 'Освоен')], db_column='Development', default='Не освоен', max_length=30, null=True, verbose_name='Степень освоения')),
                ('a_b_c1', models.FloatField(blank=True, db_column='A+B+C1, kg', null=True, verbose_name='Запасы (A+B+C1)')),
                ('c2', models.FloatField(blank=True, db_column='C2, kg', null=True, verbose_name='Запасы (C2)')),
                ('off_balance', models.FloatField(blank=True, db_column='Off-balance, kg', null=True, verbose_name='Забалансовые запасы')),
            ],
            options={
                'verbose_name': 'Месторождение',
                'verbose_name_plural': 'Месторождения',
                'db_table': 'deposit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=15, verbose_name='Наименование')),
                ('start_date', models.DateField(db_column='StartDate', verbose_name='Дата начала срока действия лицензии')),
                ('end_date', models.DateField(db_column='EndDate', verbose_name='Дата окончания срока действия лицензии')),
                ('cancelled', models.BooleanField(db_column='Cancelled', verbose_name='Действие лицензии прекращено')),
                ('destination', models.CharField(db_column='Destination', max_length=255, verbose_name='Целевое назначение лицензии')),
                ('diversion', models.CharField(db_column='Diversion', max_length=30, verbose_name='Статус отвода')),
            ],
            options={
                'verbose_name': 'Лицензия',
                'verbose_name_plural': 'Лицензии',
                'db_table': 'license',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localities',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Населенный пункт',
                'verbose_name_plural': 'Населенные пункты',
                'db_table': 'locality',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocalitiesDeposit',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(db_column='Direction', max_length=20, verbose_name='Направление')),
                ('distance', models.FloatField(db_column='Distance', verbose_name='Расстояние')),
            ],
            options={
                'verbose_name': 'Связь месторождений с населенными пунктами',
                'verbose_name_plural': 'Связи месторождений с населенными пунктами',
                'db_table': 'locality_deposit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocalitiesType',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип населенных пунктов',
                'verbose_name_plural': 'Типы населенных пунктов',
                'db_table': 'locality_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubsoilUsers',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=100, verbose_name='Наименование')),
                ('tin', models.CharField(db_column='TIN', max_length=12, unique=True, verbose_name='ИНН')),
                ('iec', models.CharField(blank=True, db_column='IEC', max_length=9, null=True, verbose_name='КПП')),
                ('psrn_psrnsp', models.CharField(db_column='PSRN/PSRNSP', max_length=15, unique=True, verbose_name='ОГРН')),
                ('date_of_registration', models.DateField(db_column='DateOfRegistration', verbose_name='Дата регистрации')),
                ('director', models.CharField(db_column='Director', max_length=100, verbose_name='Руководитель')),
            ],
            options={
                'verbose_name': 'Недропользователь',
                'verbose_name_plural': 'Недропользователи',
                'db_table': 'subsoil_user',
                'managed': True,
            },
        ),
    ]
